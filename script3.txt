======================================================
Filename: script3.txt
Running Test: ClassB
Recursive: true
CLASS
Class: ClassB
SUPERCLASS -> Recursively Inspect
SuperClass: class ClassC
   CLASS
   Class: ClassC
   SUPERCLASS -> Recursively Inspect
   SuperClass: class ClassD
      CLASS
      Class: ClassD
      SUPERCLASS -> Recursively Inspect
      SuperClass: class java.lang.Object
         CLASS
         Class: java.lang.Object
         SuperClass: NONE
         INTERFACES( class java.lang.Object )
         Interfaces-> NONE
         CONSTRUCTORS( class java.lang.Object )
         Constructors->
            CONSTRUCTORS->
               Name: java.lang.Object
               Exceptions-> NONE
               Parameter types-> NONE
               Modifiers: public
         METHODS( class java.lang.Object )
         Methods->
            METHOD
               Name: finalize
               Exceptions->
               class java.lang.Throwable
               Parameter types-> NONE
               Return type: void
               Modifiers: protected
            METHOD
               Name: wait
               Exceptions->
               class java.lang.InterruptedException
               Parameter types-> 
               long
               int
               Return type: void
               Modifiers: public final
            METHOD
               Name: wait
               Exceptions->
               class java.lang.InterruptedException
               Parameter types-> NONE
               Return type: void
               Modifiers: public final
            METHOD
               Name: wait
               Exceptions->
               class java.lang.InterruptedException
               Parameter types-> 
               long
               Return type: void
               Modifiers: public final native
            METHOD
               Name: equals
               Exceptions-> NONE
               Parameter types-> 
               java.lang.Object
               Return type: boolean
               Modifiers: public
            METHOD
               Name: toString
               Exceptions-> NONE
               Parameter types-> NONE
               Return type: class java.lang.String
               Modifiers: public
            METHOD
               Name: hashCode
               Exceptions-> NONE
               Parameter types-> NONE
               Return type: int
               Modifiers: public native
            METHOD
               Name: getClass
               Exceptions-> NONE
               Parameter types-> NONE
               Return type: class java.lang.Class
               Modifiers: public final native
            METHOD
               Name: clone
               Exceptions->
               class java.lang.CloneNotSupportedException
               Parameter types-> NONE
               Return type: class java.lang.Object
               Modifiers: protected native
            METHOD
               Name: notify
               Exceptions-> NONE
               Parameter types-> NONE
               Return type: void
               Modifiers: public final native
            METHOD
               Name: notifyAll
               Exceptions-> NONE
               Parameter types-> NONE
               Return type: void
               Modifiers: public final native
         FIELDS( class java.lang.Object )
         Fields-> NONE
      INTERFACES( class ClassD )
      Interfaces-> NONE
      CONSTRUCTORS( class ClassD )
      Constructors->
         CONSTRUCTORS->
            Name: ClassD
            Exceptions-> NONE
            Parameter types-> NONE
            Modifiers: public
         CONSTRUCTORS->
            Name: ClassD
            Exceptions-> NONE
            Parameter types-> 
            int
            Modifiers: public
      METHODS( class ClassD )
      Methods->
         METHOD
            Name: toString
            Exceptions-> NONE
            Parameter types-> NONE
            Return type: class java.lang.String
            Modifiers: public
         METHOD
            Name: getVal3
            Exceptions-> NONE
            Parameter types-> NONE
            Return type: int
            Modifiers: public
      FIELDS( class ClassD )
      Fields-> NONE
   INTERFACES( class ClassC )
   Interfaces->
   SUPERCLASS -> Recursively Inspect
   interface InterfaceA
      CLASS
      Class: InterfaceA
      SUPERCLASS -> Recursively Inspect
      SuperClass: null
      INTERFACES( interface InterfaceA )
      Interfaces->
      SUPERCLASS -> Recursively Inspect
      interface InterfaceB
         CLASS
         Class: InterfaceB
         SUPERCLASS -> Recursively Inspect
         SuperClass: null
         INTERFACES( interface InterfaceB )
         Interfaces-> NONE
         CONSTRUCTORS( interface InterfaceB )
         Constructors-> NONE
         METHODS( interface InterfaceB )
         Methods->
            METHOD
               Name: func0
               Exceptions->
               class java.lang.Exception
               Parameter types-> 
               int
               boolean
               Return type: void
               Modifiers: public abstract
         FIELDS( interface InterfaceB )
         Fields-> NONE
      CONSTRUCTORS( interface InterfaceA )
      Constructors-> NONE
      METHODS( interface InterfaceA )
      Methods->
         METHOD
            Name: func1
            Exceptions->
            class java.lang.Exception
            Parameter types-> 
            int
            double
            boolean
            java.lang.String
            Return type: void
            Modifiers: public abstract
         METHOD
            Name: func2
            Exceptions->
            class java.lang.Exception
            class java.lang.ArithmeticException
            class java.lang.IllegalMonitorStateException
            Parameter types-> 
            java.lang.String
            Return type: int
            Modifiers: public abstract
      FIELDS( interface InterfaceA )
      Fields-> NONE
   CONSTRUCTORS( class ClassC )
   Constructors->
      CONSTRUCTORS->
         Name: ClassC
         Exceptions-> NONE
         Parameter types-> NONE
         Modifiers: public
      CONSTRUCTORS->
         Name: ClassC
         Exceptions-> NONE
         Parameter types-> 
         int
         int
         Modifiers: public
   METHODS( class ClassC )
   Methods->
      METHOD
         Name: run
         Exceptions-> NONE
         Parameter types-> NONE
         Return type: void
         Modifiers: public
      METHOD
         Name: toString
         Exceptions-> NONE
         Parameter types-> NONE
         Return type: class java.lang.String
         Modifiers: public
      METHOD
         Name: func3
         Exceptions-> NONE
         Parameter types-> 
         int
         Return type: void
         Modifiers: public abstract
      METHOD
         Name: func1
         Exceptions->
         class java.lang.Exception
         Parameter types-> 
         int
         double
         boolean
         java.lang.String
         Return type: void
         Modifiers: public
      METHOD
         Name: func2
         Exceptions->
         class java.lang.Exception
         class java.lang.ArithmeticException
         class java.lang.IllegalMonitorStateException
         Parameter types-> 
         java.lang.String
         Return type: int
         Modifiers: public
      METHOD
         Name: func0
         Exceptions->
         class java.lang.Exception
         Parameter types-> 
         int
         boolean
         Return type: void
         Modifiers: public
   FIELDS( class ClassC )
   Fields-> NONE
INTERFACES( class ClassB )
Interfaces->
SUPERCLASS -> Recursively Inspect
interface java.lang.Runnable
   CLASS
   Class: java.lang.Runnable
   SUPERCLASS -> Recursively Inspect
   SuperClass: null
   INTERFACES( interface java.lang.Runnable )
   Interfaces-> NONE
   CONSTRUCTORS( interface java.lang.Runnable )
   Constructors-> NONE
   METHODS( interface java.lang.Runnable )
   Methods->
      METHOD
         Name: run
         Exceptions-> NONE
         Parameter types-> NONE
         Return type: void
         Modifiers: public abstract
   FIELDS( interface java.lang.Runnable )
   Fields-> NONE
CONSTRUCTORS( class ClassB )
Constructors->
   CONSTRUCTORS->
      Name: ClassB
      Exceptions->
      class java.lang.Exception
      Parameter types-> NONE
      Modifiers: public
METHODS( class ClassB )
Methods->
   METHOD
      Name: run
      Exceptions-> NONE
      Parameter types-> NONE
      Return type: void
      Modifiers: public
   METHOD
      Name: toString
      Exceptions-> NONE
      Parameter types-> NONE
      Return type: class java.lang.String
      Modifiers: public
   METHOD
      Name: func3
      Exceptions-> NONE
      Parameter types-> 
      int
      Return type: void
      Modifiers: public
FIELDS( class ClassB )
Fields-> NONE
======================================================
