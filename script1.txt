======================================================
Filename: script1.txt
Running Test: ClassA
Recursive: true
CLASS
Class: ClassA
SUPERCLASS -> Recursively Inspect
SuperClass: class java.lang.Object
   CLASS
   Class: java.lang.Object
   SuperClass: NONE
   INTERFACES( class java.lang.Object )
   Interfaces-> NONE
   CONSTRUCTORS( class java.lang.Object )
   Constructors->
      CONSTRUCTORS->
         Name: java.lang.Object
         Exceptions-> NONE
         Parameter types-> NONE
         Modifiers: public
   METHODS( class java.lang.Object )
   Methods->
      METHOD
         Name: finalize
         Exceptions->
         class java.lang.Throwable
         Parameter types-> NONE
         Return type: void
         Modifiers: protected
      METHOD
         Name: wait
         Exceptions->
         class java.lang.InterruptedException
         Parameter types-> 
         long
         int
         Return type: void
         Modifiers: public final
      METHOD
         Name: wait
         Exceptions->
         class java.lang.InterruptedException
         Parameter types-> NONE
         Return type: void
         Modifiers: public final
      METHOD
         Name: wait
         Exceptions->
         class java.lang.InterruptedException
         Parameter types-> 
         long
         Return type: void
         Modifiers: public final native
      METHOD
         Name: equals
         Exceptions-> NONE
         Parameter types-> 
         java.lang.Object
         Return type: boolean
         Modifiers: public
      METHOD
         Name: toString
         Exceptions-> NONE
         Parameter types-> NONE
         Return type: class java.lang.String
         Modifiers: public
      METHOD
         Name: hashCode
         Exceptions-> NONE
         Parameter types-> NONE
         Return type: int
         Modifiers: public native
      METHOD
         Name: getClass
         Exceptions-> NONE
         Parameter types-> NONE
         Return type: class java.lang.Class
         Modifiers: public final native
      METHOD
         Name: clone
         Exceptions->
         class java.lang.CloneNotSupportedException
         Parameter types-> NONE
         Return type: class java.lang.Object
         Modifiers: protected native
      METHOD
         Name: notify
         Exceptions-> NONE
         Parameter types-> NONE
         Return type: void
         Modifiers: public final native
      METHOD
         Name: notifyAll
         Exceptions-> NONE
         Parameter types-> NONE
         Return type: void
         Modifiers: public final native
   FIELDS( class java.lang.Object )
   Fields-> NONE
INTERFACES( class ClassA )
Interfaces->
SUPERCLASS -> Recursively Inspect
interface java.io.Serializable
   CLASS
   Class: java.io.Serializable
   SUPERCLASS -> Recursively Inspect
   SuperClass: null
   INTERFACES( interface java.io.Serializable )
   Interfaces-> NONE
   CONSTRUCTORS( interface java.io.Serializable )
   Constructors-> NONE
   METHODS( interface java.io.Serializable )
   Methods-> NONE
   FIELDS( interface java.io.Serializable )
   Fields-> NONE
SUPERCLASS -> Recursively Inspect
interface java.lang.Runnable
   CLASS
   Class: java.lang.Runnable
   SUPERCLASS -> Recursively Inspect
   SuperClass: null
   INTERFACES( interface java.lang.Runnable )
   Interfaces-> NONE
   CONSTRUCTORS( interface java.lang.Runnable )
   Constructors-> NONE
   METHODS( interface java.lang.Runnable )
   Methods->
      METHOD
         Name: run
         Exceptions-> NONE
         Parameter types-> NONE
         Return type: void
         Modifiers: public abstract
   FIELDS( interface java.lang.Runnable )
   Fields-> NONE
CONSTRUCTORS( class ClassA )
Constructors->
   CONSTRUCTORS->
      Name: ClassA
      Exceptions-> NONE
      Parameter types-> NONE
      Modifiers: public
   CONSTRUCTORS->
      Name: ClassA
      Exceptions-> NONE
      Parameter types-> 
      int
      Modifiers: public
METHODS( class ClassA )
Methods->
   METHOD
      Name: run
      Exceptions-> NONE
      Parameter types-> NONE
      Return type: void
      Modifiers: public
   METHOD
      Name: toString
      Exceptions-> NONE
      Parameter types-> NONE
      Return type: class java.lang.String
      Modifiers: public
   METHOD
      Name: getVal
      Exceptions-> NONE
      Parameter types-> NONE
      Return type: int
      Modifiers: public
   METHOD
      Name: setVal
      Exceptions->
      class java.lang.Exception
      Parameter types-> 
      int
      Return type: void
      Modifiers: public
   METHOD
      Name: printSomething
      Exceptions-> NONE
      Parameter types-> NONE
      Return type: void
      Modifiers: private
FIELDS( class ClassA )
Fields-> NONE
======================================================
